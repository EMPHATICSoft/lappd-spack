# Copyright 2013-2019 Lawrence Livermore National Security, LLC and other
# Spack Project Developers. See the top-level COPYRIGHT file for details.
#
# SPDX-License-Identifier: (Apache-2.0 OR MIT)

import os
import sys


from spack.package import *

def sanitize_environments(env, *vars):
    for var in vars:
        env.prune_duplicate_paths(var)
        env.deprioritize_system_paths(var)

class OtsdaqAcc(CMakePackage):
    """Otsdaq drivers for the LAPPDs at the Fermilab Test Beam Facility controlled by ACC boards."""

    url = "https://github.com/fjnicolas/otsdaq_acc.git"
    git = "https://github.com/fjnicolas/otsdaq_acc.git"

    version("master", branch="master", get_full_repo=True)

    def url_for_version(self, version):
        #url = "https://github.com/FTBF/otsdaq_acc/archive/refs/tags/{0}.tar.gz"
        url = "https://github.com/fjnicolas/otsdaq_acc.git"
        return url.format(version)

    variant(
        "cxxstd",
        default="20",
        values=("14", "17", conditional("20",when="@v2_06_10:")),
        multi=False,
        sticky=True,
        description="Use the specified C++ standard when building.",
    )


    depends_on("otsdaq")
    depends_on("otsdaq-utilities")
    depends_on("otsdaq-components")
    depends_on("xdaq")

    #def setup_run_environment(self, env):
    #    prefix = self.prefix
    #    # Ensure we can find plugin libraries.
    #    env.prepend_path("CET_PLUGIN_PATH", prefix.lib)
    #    # Ensure we can find fhicl files
    #    env.prepend_path("FHICL_FILE_PATH", prefix + "/fcl")
    #    # Ensure we can find libraries
    #    env.set("OTSDAQ_LIB", prefix.lib)
    #    # Cleaup.
    #    sanitize_environments(env, "CET_PLUGIN_PATH", "FHICL_FILE_PATH")

    #def setup_dependent_run_environment(self, env, dependent_spec):
    #    prefix = self.prefix
    #    # Ensure we can find plugin libraries.
    #    env.prepend_path("CET_PLUGIN_PATH", prefix.lib)
    #    # Ensure we can find fhicl files
    #    env.prepend_path("FHICL_FILE_PATH", prefix + "/fcl")
    #    # Ensure we can find libraries
    #    env.set("OTSDAQ_LIB", prefix.lib)
    #    # Cleaup.
    #    sanitize_environments(env, "CET_PLUGIN_PATH", "FHICL_FILE_PATH")
